syntax = "proto3";

package team.v1alpha1;

import "gconfig/v1alpha1/gconfig.proto";

import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

// TeamService is used to manage Granted teams.
service TeamService {
  rpc ListMembers(ListMembersRequest) returns (ListMembersResponse);
  rpc UpdateConfig(UpdateConfigRequest) returns (UpdateConfigResponse);
  rpc EnrolProvider(EnrolProviderRequest) returns (EnrolProviderResponse);
  rpc ListProviders(ListProvidersRequest) returns (ListProvidersResponse);
  // DeleteProvider removes a provider from a Granted team.
  rpc DeleteProvider(DeleteProviderRequest) returns (DeleteProviderResponse);
  // GetStatus returns the overall state of a team's Granted deployments and whether any
  // actions are required from an administrator.
  rpc GetStatus(GetStatusRequest) returns (GetStatusResponse);
  rpc GetProvider(GetProviderRequest) returns (GetProviderResponse);
  // GetAllProviderDetails returns details about a team's providers including all accounts and
  // access handlers associated with the provider.
  rpc GetAllProviderDetails(GetAllProviderDetailsRequest) returns (GetAllProviderDetailsResponse);
  // GetAllProviderChecksum is used by clients to determine whether their local cache of provider
  // details requires an update.
  rpc GetAllProviderChecksum(GetAllProviderChecksumRequest) returns (GetAllProviderChecksumResponse);
}

message ListMembersRequest {}

message ListMembersResponse {
	repeated Member members = 1;
}

message Member {
	string email_address = 1;
	bool is_admin = 2;
}

message UpdateConfigRequest {
  gconfig.v1alpha1.Config config = 1;
};

message UpdateConfigResponse {
  bytes sha256_hash = 1;
}

message EnrolProviderRequest {
  string id = 1;
  string name = 2;
  oneof provider {
    EnrolAWSProvider aws = 3;
  }
}

message EnrolAWSProvider {
  string account_id = 1 [(validate.rules).string = {len: 12, pattern: "^[0-9]*$"}];
}

enum ProviderStatus {
  PROVIDER_STATUS_UNSPECIFIED = 0;
  PROVIDER_STATUS_NEEDS_ENROLLING = 1;
  PROVIDER_STATUS_ACTIVE = 2;
  PROVIDER_STATUS_ENROLLMENT_EXPIRED = 3;
}

message EnrolProviderResponse {
  ProviderStatus status = 1;
  string deployment_url = 2;
  string enrollment_token = 3;
  google.protobuf.Timestamp expires_at = 4;
}

message ListProvidersRequest {}

message ListProvidersResponse {
  repeated Provider providers = 1;
  int32 pending_enrollments_count = 2;
}

message GetStatusRequest {}

message GetStatusResponse {
  // any enrollments which the user needs to finish deploying
  repeated ProviderEnrollment enrollments = 1;
  // any enrollments which have expired (which require the user to delete)
  repeated ProviderEnrollment expired_enrollments = 2;
}

message ProviderEnrollment {
  string id = 1;
  string name = 2;
  string deployment_url = 3;
  string enrollment_token = 4;
  google.protobuf.Timestamp expires_at = 5;
  oneof details {
    AWSProviderEnrollment aws = 6;
  }
}

message AWSProviderEnrollment {
  string account_id = 1;
}

message DeleteProviderRequest {
  string id = 1;
}

message DeleteProviderResponse {}

message GetProviderRequest {
  string id = 1;
}

message GetProviderResponse {
  Provider provider = 1;
}

message Provider {
  string id = 1;
  string name = 2;
  ProviderStatus status = 3;
  oneof details {
    AWSProviderDetails aws = 4;
  }
}

message AWSProviderDetails {
  string org_management_account_id = 1;
}


message GetAllProviderDetailsRequest {}

message GetAllProviderDetailsResponse {
  gconfig.v1alpha1.Providers providers = 1;
  // A checksum of the ProviderDetails.
  // Used so that clients can check efficiently whether
  // they need to update their local cache of provider information.
  bytes sha256_checksum = 2;
}

message GetAllProviderChecksumRequest {}

message GetAllProviderChecksumResponse {
  bytes sha256_checksum = 1;
}