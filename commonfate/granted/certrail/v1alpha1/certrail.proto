syntax = "proto3";

package certrail.v1alpha1;

import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

// CertrailService is API to the Granted transparency log.
service CertrailService {
  // Store a payload in the transparency log
  rpc Store(StoreRequest) returns (StoreResponse);
  rpc GetEntries(GetEntriesRequest) returns (GetEntriesResponse);
  rpc GetLatestSignedLogRoot(GetLatestSignedLogRootRequest) returns (GetLatestSignedLogRootResponse);
}

message ApproveConfigPayload {
  bytes config_sha256 = 1 [(validate.rules).bytes.len = 32];
  // the certificate of the approver
  bytes approved_by = 2;
}

message IssueCertificatePayload {
  bytes certificate = 1;
}

message RevokeCertificatePayload {
  bytes certificate = 1;
  // the certificate of the actor who is performing the revoking
  bytes revoked_by = 2;
}

// When an access handler issues credentials to a user it is stored
// in our immutable audit trail. This allows administrators to compare
// our audit trail against their cloud providers' audit trails to verify
// that we are correctly issuing credentials and detect any discrepancies.
message IssueSessionCredentialsPayload {
  // id is the access key ID in AWS
  string id = 1;
  bytes user_certificate = 2;
}

message Envelope {
  Payload payload = 1;
  bytes signature = 2 [(validate.rules).bytes.max_len = 256];
}

message Payload {
  google.protobuf.Timestamp timestamp = 1;
  oneof contents {
    ApproveConfigPayload approve_config = 2;
    IssueCertificatePayload issue_certificate = 3;
    RevokeCertificatePayload revoke_certificate = 4;
    IssueSessionCredentialsPayload issue_session_credentials = 5;
  }
}

message StoreRequest {
  Envelope envelope = 1;
}

message StoreResponse {}

message GetEntriesRequest {
  int64 start_index = 1;
  int64 count = 2;
}

message GetEntriesResponse {
  repeated IncludedEnvelope envelopes = 1;
}

message IncludedEnvelope {
  Envelope envelope = 1;
}

message GetLatestSignedLogRootRequest {}

message GetLatestSignedLogRootResponse {
  LogRoot log_root = 1;
}

message LogRoot {
  uint64 tree_size = 1;
  bytes root_hash = 2;
  google.protobuf.Timestamp timestamp = 3;
}