// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: provider/v1alpha1/accounts.proto

package providerv1alpha1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ProviderAccountsServiceClient is the client API for ProviderAccountsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ProviderAccountsServiceClient interface {
	StoreAccounts(ctx context.Context, in *StoreAccountsRequest, opts ...grpc.CallOption) (*StoreAccountsResponse, error)
}

type providerAccountsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProviderAccountsServiceClient(cc grpc.ClientConnInterface) ProviderAccountsServiceClient {
	return &providerAccountsServiceClient{cc}
}

func (c *providerAccountsServiceClient) StoreAccounts(ctx context.Context, in *StoreAccountsRequest, opts ...grpc.CallOption) (*StoreAccountsResponse, error) {
	out := new(StoreAccountsResponse)
	err := c.cc.Invoke(ctx, "/provider.v1alpha1.ProviderAccountsService/StoreAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProviderAccountsServiceServer is the server API for ProviderAccountsService service.
// All implementations should embed UnimplementedProviderAccountsServiceServer
// for forward compatibility
type ProviderAccountsServiceServer interface {
	StoreAccounts(context.Context, *StoreAccountsRequest) (*StoreAccountsResponse, error)
}

// UnimplementedProviderAccountsServiceServer should be embedded to have forward compatible implementations.
type UnimplementedProviderAccountsServiceServer struct {
}

func (UnimplementedProviderAccountsServiceServer) StoreAccounts(context.Context, *StoreAccountsRequest) (*StoreAccountsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StoreAccounts not implemented")
}

// UnsafeProviderAccountsServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ProviderAccountsServiceServer will
// result in compilation errors.
type UnsafeProviderAccountsServiceServer interface {
	mustEmbedUnimplementedProviderAccountsServiceServer()
}

func RegisterProviderAccountsServiceServer(s grpc.ServiceRegistrar, srv ProviderAccountsServiceServer) {
	s.RegisterService(&ProviderAccountsService_ServiceDesc, srv)
}

func _ProviderAccountsService_StoreAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderAccountsServiceServer).StoreAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provider.v1alpha1.ProviderAccountsService/StoreAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderAccountsServiceServer).StoreAccounts(ctx, req.(*StoreAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ProviderAccountsService_ServiceDesc is the grpc.ServiceDesc for ProviderAccountsService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ProviderAccountsService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "provider.v1alpha1.ProviderAccountsService",
	HandlerType: (*ProviderAccountsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StoreAccounts",
			Handler:    _ProviderAccountsService_StoreAccounts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "provider/v1alpha1/accounts.proto",
}
