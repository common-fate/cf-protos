// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: login/v1alpha1/login.proto

package loginv1alpha1

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	go_uber_org_zap_zapcore "go.uber.org/zap/zapcore"
	github_com_golang_protobuf_ptypes "github.com/golang/protobuf/ptypes"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (m *BeginBootstrapRequest) MarshalLogObject(enc go_uber_org_zap_zapcore.ObjectEncoder) error {
	var keyName string
	_ = keyName

	if m == nil {
		return nil
	}

	keyName = "admin_email_address" // field admin_email_address = 1
	enc.AddString(keyName, m.AdminEmailAddress)

	keyName = "pubkey" // field pubkey = 2
	enc.AddByteString(keyName, m.Pubkey)

	keyName = "version" // field version = 3
	enc.AddString(keyName, m.Version)

	return nil
}

func (m *BeginBootstrapResponse) MarshalLogObject(enc go_uber_org_zap_zapcore.ObjectEncoder) error {
	var keyName string
	_ = keyName

	if m == nil {
		return nil
	}

	keyName = "challenge" // field challenge = 1
	enc.AddString(keyName, m.Challenge)

	return nil
}

func (m *CompleteBootstrapRequest) MarshalLogObject(enc go_uber_org_zap_zapcore.ObjectEncoder) error {
	var keyName string
	_ = keyName

	if m == nil {
		return nil
	}

	keyName = "challenge" // field challenge = 1
	enc.AddString(keyName, m.Challenge)

	keyName = "sig" // field sig = 2
	enc.AddByteString(keyName, m.Sig)

	return nil
}

func (m *CompleteBootstrapResponse) MarshalLogObject(enc go_uber_org_zap_zapcore.ObjectEncoder) error {
	var keyName string
	_ = keyName

	if m == nil {
		return nil
	}

	keyName = "server_token" // field server_token = 1
	enc.AddString(keyName, m.ServerToken)

	keyName = "server_token_expires_at" // field server_token_expires_at = 2
	if t, err := github_com_golang_protobuf_ptypes.Timestamp(m.ServerTokenExpiresAt); err == nil {
		enc.AddTime(keyName, t)
	}

	keyName = "user_token" // field user_token = 3
	enc.AddString(keyName, m.UserToken)

	return nil
}

func (m *ExchangeCodeRequest) MarshalLogObject(enc go_uber_org_zap_zapcore.ObjectEncoder) error {
	var keyName string
	_ = keyName

	if m == nil {
		return nil
	}

	keyName = "server_token" // field server_token = 1
	enc.AddString(keyName, m.ServerToken)

	keyName = "code" // field code = 2
	enc.AddString(keyName, m.Code)

	return nil
}

func (m *ExchangeCodeResponse) MarshalLogObject(enc go_uber_org_zap_zapcore.ObjectEncoder) error {
	var keyName string
	_ = keyName

	if m == nil {
		return nil
	}

	keyName = "user_email_address" // field user_email_address = 1
	enc.AddString(keyName, m.UserEmailAddress)

	return nil
}
